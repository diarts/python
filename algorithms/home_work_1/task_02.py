# Выполнить логические побитовые операции "И", "ИЛИ" и др. над числами 5 и 6. Выполнить
# над числом 5 побитовый сдвиг вправо и влево на два знака. Объяснить полученный
# результат.

num_1 = 5
num_2 = 6

print('Бинарный | - "ИЛИ" оператор копирует бит, если тот присутствует в хотя бы в одном операнде.\n'
      f'{num_1} в бинарном виде = 1 0\n'
      f'{num_2} в бинарном виде = 1 1\n'
      f'По этому 1 0 | 1 1 = 1 1, или в числовом выражении {num_1} | {num_2} = {num_1 | num_2}\n\n')

print('Бинарный ^ - "Исключительное ИЛИ" оператор копирует бит только если бит присутствует в одном из операндов, '
      'но не в обоих сразу.\n'
      f'По этому 1 0 ^ 1 1 = 0 1, или в числовом выражении {num_1} ^ {num_2} = {num_1 ^ num_2}\n\n')

print('Бинарный & - "И" оператор, копирует бит в результат только если бит присутствует в обоих операндах.\n'
      f'По этому 1 0 & 1 1 = 1 1, или в числовом выражении {num_1} & {num_2} = {num_1 & num_2}\n\n')

print('Бинарный комплиментарный оператор ~ меняет биты на обратные, там где была единица становиться ноль и наоборот.\n'
      f'По этому 1 0 = 0 1, или в числовом выражении ~{num_1} = {~num_1}\n'
      f'По этому 1 1 = 0 0, или в числовом выражении ~{num_2} = {~num_2}\n')

print('Побитовый сдвиг влево. Значение левого операнда "сдвигается" влево на количество бит '
       'указанных в правом операнде.\n'
      f'По этому 1 0 << 2 = 1 0 0 0, или в числовом выражении {num_1} << 2 = {num_1 << 2}\n\n')

print('Побитовый сдвиг вправо. Значение левого операнда "сдвигается" вправо на количество бит '
      'указанных в правом операнде.\n'
      f'По этому 1 0 >> 2 = 0, или в числовом выражении {num_1} >> 2 = {num_1 >> 2}\n\n')